I"ЗЙ<h2 id="problem-1--very-hard-problem">Problem 1 : Very Hard Problem</h2>

<p><a href="/html-statements/Statements.html">Problem Description</a></p>

<h3 id="solution">Solution:</h3>

<p>ржПрж░ рж╕ржорж╛ржзрж╛ржиржЯрж┐ ржПржХржжржо рж╕рж╣ржЬред ржЖржорж╛ржХрзЗ $f(n)$ ржжрзЗрзЯрж╛ ржЖржЫрзЗ, ржЖржорж╛ржХрзЗ $n$ ржмрзЗрзЬ ржХрж░рждрзЗ рж╣ржмрзЗред ржЖржорж░рж╛ ржлрж╛ржВрж╢ржирзЗрж░ ржжрж┐ржХрзЗ рждрж╛ржХрж╛рж▓рзЗржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЛред ржПржЯрж┐ ржЖрж╕рж▓рзЗ $1+2+3+тАж.+n$ ржХрж░ржЫрзЗред рждрж╛рж░ ржорж╛ржирзЗ рж╣рж▓рзЛ $f(x)$ рж╣рж▓рзЛ 1 ржерзЗржХрзЗ n ржкрж░рзНржпржирзНржд рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛрж░ ржпрзЛржЧржлрж▓ред рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ ржПржЯрж╛ржУ ржмрж▓рждрзЗ ржкрж╛рж░рж┐ $\displaystyle{f(x) = \frac{x(x+1)}{2}}$ред ржПржмрж╛рж░ ржЖржорж╛ржжрзЛрж░ ржЬржирзНржп рж╕ржорж╕рзНржпрж╛ржЯрж┐ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛ рж╕рж╣ржЬред ржПржХржЯрзБ ржмрзАржЬржЧржирж┐ржд ржЦрж╛ржЯрж╛рж▓рзЗржЗ ржПрж░ржХржо рж╣ржмрзЗржГ</p>

<script type="math/tex; mode=display">n^2 + n = 2f(n)</script>

<script type="math/tex; mode=display">n^2 + n -2f(n) = 0</script>

<p>ржПржмрж╛рж░ ржжрзНржмрж┐ржШрж╛ржд рж╕ржорзАржХрж░ржи ржмрзНржпрж╛ржмрж╣рж╛рж░ ржХрж░рзЗ x ржПрж░ ржорж╛ржи ржмрзЗрзЬ ржХрж░рж▓рзЗржЗ рж╣ржмрзЗред ржпржжрж┐ ржкрж╛ржУрзЯрж╛ ржирж╛ ржпрж╛рзЯ рждрж╛рж╣рж▓рзЗ ржЙрждрзНрждрж░ -1ред ржоржЬрж╛рж░ ржмрзНржпрж╛ржкрж╛рж░ рж╣рж▓рзЛ ржПржЯрж┐ ржЖржорж┐ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ржжрж┐рзЯрзЗ рж╕ржорж╛ржзрж╛ржи ржХрж░рзЗржЫрж┐рж▓рж╛ржоред ржЕрж░рзНржерж╛рзО, n ржПрж░ ржЙржкрж░ ржмрж╛ржЗржирж╛рж░рж┐ рж╕рж╛рж░рзНржЪ ржХрж░рзЗ ржмрзЗрзЬ ржХрж░рзЗржЫрж┐, ржХрзЛржи $n$ ржПрж░ ржЬржирзНржп $f(n)$ ржПрж░ ржорж╛ржи ржЗржиржкрзБржЯрзЗрж░ рж╕ржорж╛ржи рж╣рзЯред</p>

<h2 id="problem-2-infinity-war-without-avengers">Problem 2: Infinity war without Avengers!</h2>

<!-- [Problem Description](https://codeforces.com/group/wUWXh1K7Gk/contest/253497/problem/B) -->
<p><a href="/assets/pdf/bdoi-2-prob-B.pdf"> Problem Statement </a></p>

<p>ржЖржорж┐ ржПржЯрж╛ ржирж┐рзЯрзЗ ржХрж┐ржЫрзБ ржмрж▓рждрзЗ ржЪрж╛ржЗ ржирж╛, <a href="https://www.youtube.com/watch?v=pwpOC1dph6U&amp;t=4s">ржПржЗ ржнрж┐ржбрж┐ржУржЯрж╛</a> ржжрзЗржЦрзЗ ржирж┐рж▓рзЗржЗ рж╣ржмрзЗ!</p>

<h2 id="problem-3-back-to-ssc-maths">Problem 3: Back to SSC Maths</h2>

<!-- [Problem Description](https://codeforces.com/group/wUWXh1K7Gk/contest/253497/problem/C) -->
<p><a href="/assets/pdf/bdoi-2-problem-c.pdf"> Problem Statement </a></p>

<p>рж╕ржорж╕рзНржпрж╛ржЯрж┐рж░ рж╕ржорж╛ржзрж╛ржи ржирж╛ржорзЗрж░ ржоржзрзНржпрзЗржЗ ржжрзЗрзЯрж╛ ржЖржЫрзЗред ржПрж╕ржПрж╕рж╕рж┐ рж╕рж╛ржзрж╛рж░ржи ржЧржирж┐ржд ржмржЗрзЯрзЗрж░ ржкрзНрж░ржержо ржЪрзНржпрж╛ржкрзНржЯрж╛рж░ ржнрж╛рж▓рзЛ ржХрж░рзЗ ржкрзЬрждрзЗ рж╣ржмрзЗред рждржмрзЗ ржУржЦрж╛ржирзЗ ржпрзЗ ржирж┐рзЯржо ржжрзЗрзЯрж╛ ржЖржЫрзЗ рж╕рзЗржЯрж╛ ржХрзЛржерж╛ ржерзЗржХрзЗ ржЖрж╕рж▓рзЛ рж╕рзЗржЯрж╛ ржЬрж╛ржирждрзЗ рждрзЛржорж╛ржХрзЗ ржЧрзБржирзЛрждрзНрждрж░ ржзрж╛рж░рж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирждрзЗ рж╣ржмрзЗред ржПржЬржирзНржп ржПрж╕ржПрж╕рж╕рж┐ рж╣рж╛ржЗрзЯрж╛рж░ ржорзНржпрж╛рже ржмржЗрзЯрзЗрж░ ржЧрзБржирзЛрждрзНрждрж░ ржзрж╛рж░рж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржкрзЬрзЗ ржирж┐рж▓рзЗржЗ ржкрж╛рж░рж╛рж░ ржХржерж╛ред ржПржХржЯрж╛ рж╣рж┐ржирзНржЯ ржжрж┐рзЯрзЗ ржжрзЗржЗред</p>

<script type="math/tex; mode=display">14.3333333333.....</script>

<script type="math/tex; mode=display">= 14+0.3+0.03+0.003+......</script>

<p>ржПржнрж╛ржмрзЗ ржПржХржЯрж╛ ржЧрзБржирзЛрждрзНрждрж░ ржзрж╛рж░рж╛ ржкрж╛ржУрзЯрж╛ ржпрж╛ржмрзЗред ржЖрж░ рж╕рзЗржЯрж╛ рж╕рж▓рзНржн ржХрж░рждрзЗ ржкрж╛рж░рж▓рзЗржЗ рж╣рзЯрзЗ ржпрж╛ржмрзЗред</p>

<h2 id="problem-4-four-numbers">Problem 4: Four Numbers</h2>

<!-- [Problem Description](https://codeforces.com/group/wUWXh1K7Gk/contest/253497/problem/D) -->
<p><a href="/assets/pdf/bdoi-2-prob-d.pdf"> Problem Statement </a></p>

<p>ржПржЗ ржкрзНрж░ржмрзНрж▓рзЗржоржЯрж╛ ржЦрзБржм ржжрж╛рж░рзБржиред рж╕рж▓рж┐ржЙрж╢ржиржЯрж╛ржУ ржнрж╛рж▓рзЛред ржЕржирзЗржХржЯрж╛ greedy рж╕рж▓рж┐ржЙрж╢ржиред ржЖржорж╛ржжрзЗрж░ ржкрзНрж░ржержо ржЖржЗржбрж┐рзЯрж╛ рж╣рж▓рзЛ, $A+B$ ржХрзЗ maximize ржХрж░рждрзЗ рж╣ржмрзЗ ржЖрж░ $C-D$ ржХрзЗ minimized ржХрж░рждрзЗ рж╣ржмрзЗред рждржмрзЗ $C-D$ ржХрзЗ ржирж┐ржЧрзЗржЯрж┐ржн ржХрж░рж╛ ржпрж╛ржмрзЗржирж╛, рждрж╛рж╣рж▓рзЗ ржЙрждрзНрждрж░ ржирж┐ржЧрзЗржЯрж┐ржн ржЪрж▓рзЗ ржЖрж╕ржмрзЗ, ржпрж╛ maximum рж╣ржмрзЗржирж╛ред ржПржмрж╛рж░ ржПржЗ ржкрзНрж░ржмрзНрж▓рзЗржоржЯрж╛ $\mathcal O(n^2)$ ржмрж╛ $\mathcal O(n^2  \log n)$ ржП рж╕рж╣ржЬрзЗржЗ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛ ржпрж╛рзЯред ржпрзЗржХрзЛржи ржПржХржЯрж╛ ржкрж╛рж╢ ржлрж┐ржХрзНрж╕ ржХрж░рзЗ ржЖрж░рзЗржХржЯрж╛ рж▓рзБржк ржЪрж╛рж▓рж┐рзЯрзЗ ржХрж░рж╛ ржпрж╛рзЯ ржЖрж░ржХрж┐ред ржЖржорж░рж╛ ржжрзЗржЦрж┐ $\mathcal O(N)$ ржП ржХрзАржнрж╛ржмрзЗ ржХрж░рж╛ ржпрж╛рзЯред</p>

<p>ржЖржорж░рж╛ рж▓рж┐рж╕рзНржЯ ржЯрж╛ржХрзЗ decreasing ржЕрж░рзНржбрж╛рж░рзЗ рж╕рж░рзНржЯ ржХрж░рзЗ ржлрзЗрж▓рж┐ред рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ рж╢рзБрж░рзБрждрзЗ $A = a_1$ ржЖрж░ $B = a_2$ ржзрж░рзЗ ржирж┐рждрзЗ ржкрж╛рж░ржмрзЛред ржХрж╛рж░ржи ржкрзНрж░ржержо ржжрзБржЯрж┐ рж╕ржВржЦрзНржпрж╛ рж╕ржмржерзЗржХрзЗ ржмрзЬред ржПржмрж╛рж░ ржПржЗ ржжрзБржЯрж┐ржХрзЗ ржлрж┐ржХрзНрж╕ ржХрж░рж╛рж░ ржкрж░ ржмрж╛ржХрж┐ рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ ржерзЗржХрзЗ ржЖржорж╛ржжрзЗрж░ржХрзЗ ржПржоржи ржПржХржЬрзЛрзЬрж╛ рж╕ржВржЦрзНржпрж╛ ржмрзЗрзЬ ржХрж░рждрзЗ рж╣ржмрзЗ, ржпрж╛ржжрзЗрж░ ржоржзрзНржпрзЗ ржкрж╛рж░рзНржержХрзНржп рж╕ржмржерзЗржХрзЗ ржХржоред ржПржЦржи рж▓ржХрзНрж╖рзНржпржирзАрзЯ ржпрзЗ, ржХржЦржирзЛржЗ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ рж╕рж╛ржерзЗ рждрж╛рж░ ржкрж╛рж╢рзЗрж░ рж╕ржВржЦрзНржпрж╛рж░ ржкрж╛рж░рзНржержХрзНржп, рждрж╛рж░ рзи-рзй ржШрж░ ржкрж░рзЗрж░ рж╕ржВржЦрзНржпрж╛рж░ ржкрж╛рж░рзНржержХрзНржпрзЗрж░ ржерзЗржХрзЗ ржмрзЗрж╢рж┐ рж╣рждрзЗ ржкрж╛рж░ржмрзЗржирж╛ред ржЪрж┐ржирзНрждрж╛ ржХрж░рж▓рзЗржЗ ржмрзЛржЭрж╛ ржпрж╛ржмрзЗред рждрж╛ржЗ ржЖржорж░рж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ рж╕ржВржЦрзНржпрж╛ ржирж┐рзЯрзЗ ржЪрзЗржХ ржХрж░ржмрзЛ ржПржмржВ $a_i,a_{i+1}$ ржмрзЗрзЬ ржХрж░ржмрзЛ ржпрзЗржи $\abs{a_i - a_{i+1}}$ minimized рж╣рзЯред рждрж╛рж╣рж▓рзЗржЗ рж╣рзЯрзЗ ржпрж╛ржмрзЗред рждржмрзЗ ржПржЯрж╛ржЗ ржХрж┐ рж╕ржарж┐ржХ рж╕рж▓рж┐ржЙрж╢ржи ржжрж┐ржмрзЗ? ржирж┐ржЪрзЗрж░ ржХрзЗрж╕ржЯрж┐рж░ ржХржерж╛ ржЪрж┐ржирзНрждрж╛ ржХрж░рж┐ред</p>

<script type="math/tex; mode=display">13 \ \ \ 12 \ \ \ 10 \ \ \ 5 \ \ \ 2</script>

<p>ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ ржпржжрж┐ 13+12 ржирж┐рзЯрзЗ ржлрзЗрж▓рж┐, ржЖрж░ ржУржкрж╛рж╢рзЗ ржорж┐ржирж┐ржорж╛ржо ржбрж┐ржлрж╛рж░рзЗржирзНрж╕ ржкрж╛ржмрзЛ 3, рждрж╛рж╣рж▓рзЗ ржЙрждрзНрждрж░ рж╣ржмрзЗ $\frac{25}{3} = 8.33333..$ ржХрж┐ржирзНрждрзБ ржЖржорж░рж╛ ржпржжрж┐ C = 13, D = 12 , A = 10, B = 5 ржирзЗржЗ рждрж╛рж╣рж▓рзЗ ржЖржорж░рж╛ ржкрж╛ржмрзЛ 15, ржпрж╛ ржмрзЗржЯрж╛рж░ рж╕рж▓рж┐ржЙрж╢ржиред рждрж╛рж╣рж▓рзЗ ржХрзА ржХрж░рж╛ ржпрж╛рзЯ? ржЖрж╕рж▓рзЗ ржЖржорж░рж╛ ржпрзЗржЯрж╛ ржХрж░ржЫрж┐, рж╕рзЗржЯрж╛ рж╣рж▓рзЛ $A = a_1$ ржЖрж░ $B = a_2$ ржлрж┐ржХрзНрж╕ ржХрж░рзЗ ржжрж┐ржЪрзНржЫрж┐, ржпрзЗржЬржирзНржп ржХрж┐ржЫрзБ ржЕржкржЯрж┐ржорж╛рж▓ рж╕рж▓рж┐ржЙрж╢ржи ржорж┐рж╕ рж╣рзЯрзЗ ржпрж╛ржЪрзНржЫрзЗред рждржмрзЗ ржЦрзБржм ржмрзЗрж╢рж┐ ржкрж░рж┐ржорж╛ржи ржХрзЗрж╕ ржХрж┐ржирзНрждрзБ ржЖрж░ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛рж░ ржжрж░ржХрж╛рж░ ржирзЗржЗред ржЖржорж╛ржжрзЗрж░ рж╢рзБржзрзБ ржжрзЗржЦрждрзЗ рж╣ржмрзЗ $a_1$ ржмрж╛ $a_2$ ржПрж░ ржХрзЛржирзЛ ржПржХржЯрж┐ ржмрж╛ ржжрзБржЯрж┐ржЗ C ржмрж╛ D рж╣рж┐рж╕рзЗржмрзЗ ржХрж╛ржЬрзЗ рж▓рж╛ржЧрж╛ржирзЛ ржпрж╛ржмрзЗ ржХрж┐ржирж╛ред ржХрж╛рж░ржи ржУржЗ ржХрзЗрж╕ ржжрзБржЯрж┐ ржЫрж╛рзЬрж╛ ржмрж╛ржХрж┐ рж╕ржмржЗ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛ рж╣рзЯрзЗ ржЧрзЗржЫрзЗред ржПржЦржи ржЖржорж░рж╛ ржЖрж░рзЛ ржжрзБржЯрж┐ ржЬрж┐ржирж┐рж╕рж╣ ржжрзЗржЦрж▓рзЗржЗ рж╣рзЯрзЗ ржпрж╛ржмрзЗред ржкрзНрж░ржержоржд ржжрзЗржЦржмрзЛ $a_1$ ржХрзЗ C ржЖрж░ $a_2$ ржХрзЗ D ржзрж░рзЗред ржпржжрж┐ рж╕рзЗржЯрж╛ ржзрж░рж┐, рждрж╛рж╣рж▓рзЗ $A,B$ ржХрзЛржиржЯрж╛ ржХрзЛржиржЯрж╛ рж╣ржмрзЗ? ржпрзЗрж╣рзЗрждрзБ рж▓рж┐рж╕рзНржЯ ржбрж┐ржХрзНрж░рж┐рж╕рж┐ржВ ржЕрж░рзНржбрж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ, рждрж╛ржЗ рж╕ржмржерзЗржХрзЗ ржмрзЗржЯрж╛рж░ рж╣ржмрзЗ $A = a_3, B = a_4$ ржзрж░рж▓рзЗ, ржХрж╛рж░ржи ржПржЗ ржжрзБржЯрж┐ ржЫрж╛рзЬрж╛ A+B ржорзНржпрж╛ржХрзНрж╕рж┐ржорж╛ржЗржЬ ржХрж░рж╛рж░ ржЙржкрж╛рзЯ ржирзЗржЗред рждрж╛рж░ ржорж╛ржирзЗ, $A = a_3 , B = a_4 , C = a_1 , D = a_2$ ржирж┐рзЯрзЗ ржжрзЗржЦрждрзЗ рж╣ржмрзЗ ржПржХржЯрж╛ред ржЖрж░рзЗржХржЯрж╛ ржорж╛рждрзНрж░ ржХрзЗржЗрж╕ ржмрж╛ржХрж┐ ржЖржЫрзЗред рж╕рзЗржЯрж┐ ржХрж┐ ржПржХржЯрзБ ржЪрж┐ржирзНрждрж╛ ржХрж░рзЛред ржЖржорж░рж╛ $a_1$ ржЖрж░  $a_2$ ржПрж░ ржпрзЗржХрзЛржи ржПржХржЯрж┐ржХрзЗ C ржмрж╛ D рждрзЗ ржжрж┐ржм, ржЖрж░ ржЖрж░рзЗржХржЯрж┐ржХрзЗ A ржмрж╛ B рждрзЗред ржПржмрж╛рж░ ржЖржмрж╛рж░ ржУржЗ ржХржерж╛ржЗ, ржкрж╛рж╢рж╛ржкрж╛рж╢рж┐ ржЬрзЛрзЬрж╛ ржЫрж╛рзЬрж╛ C,D ржжрзЗрзЯрж╛ рж▓рж╛ржнржЬржиржХ ржирж╛, рждрж╛ржЗ ржЖржорж░рж╛ ржПржмрж╛рж░ $a_2 = C ,  a_3 = D$ ржЖрж░ $a_1 = A , a_4 = B$ ржирж┐рзЯрзЗ ржжрзЗржЦржмрзЛ ржХрж┐ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯред ржЖрж░ ржПржЗ рзй ржЯрж╛ ржХрзЗржЗрж╕ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж▓рзЗржЗ рж╣рзЯрзЗ ржпрж╛ржмрзЗред ржЖрж░ ржХрзЛржи ржЕржкржЯрж┐ржорж╛рж▓ ржХрзЗржЗрж╕ ржкрж╛ржУрзЯрж╛ рж╕ржорзНржнржм ржирж╛ред рж╕рж▓рж┐ржЙрж╢ржи ржирж┐ржЪрзЗ ржжрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрж┐, ржХрзНрж▓рж┐рзЯрж╛рж░ ржХрж░рж╛рж░ ржЬржирзНржп:</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">n</span><span class="p">;</span>
<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span><span class="p">;</span>
<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">ara</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
<span class="p">}</span>
<span class="n">sort</span><span class="p">(</span><span class="n">ara</span><span class="p">,</span><span class="n">ara</span><span class="o">+</span><span class="n">n</span><span class="p">,</span><span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">());</span>
<span class="kt">int</span> <span class="n">upore</span> <span class="o">=</span> <span class="n">ara</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="n">ara</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">mn</span> <span class="o">=</span> <span class="mi">1000000000</span><span class="p">;</span>
<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">mn</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">mn</span><span class="p">,</span><span class="n">ara</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-</span><span class="n">ara</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]);</span>
<span class="p">}</span>
<span class="kt">double</span> <span class="n">ans</span> <span class="o">=</span> <span class="p">(</span><span class="n">upore</span><span class="o">*</span><span class="mf">1.0</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">mn</span><span class="o">*</span><span class="mf">1.</span><span class="p">);</span>
<span class="kt">double</span> <span class="n">one</span> <span class="o">=</span> <span class="p">(</span><span class="n">ara</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">*</span><span class="mf">1.</span><span class="o">+</span><span class="n">ara</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mf">1.</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">ara</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="n">ara</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">*</span><span class="mf">1.0</span><span class="p">;</span>
<span class="kt">double</span> <span class="n">two</span> <span class="o">=</span> <span class="p">(</span><span class="n">ara</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mf">1.</span><span class="o">+</span><span class="n">ara</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">*</span><span class="mf">1.</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">ara</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="n">ara</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">*</span><span class="mf">1.0</span><span class="p">;</span>
<span class="n">ans</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span><span class="n">max</span><span class="p">(</span><span class="n">one</span><span class="p">,</span><span class="n">two</span><span class="p">));</span>
<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">fixed</span> <span class="o">&lt;&lt;</span> <span class="n">setprecision</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="problem-5--segment-union">Problem 5 : Segment Union</h2>
<!-- [Problem Description](...)
 -->
<p><a href="/assets/pdf/bdoi-2-prob-e.pdf"> Problem Statement </a></p>

<p>ржПржЗ ржкрзНрж░ржмрзНрж▓рзЗржоржЯрж┐ ржЕржирзЗржХржнрж╛ржмрзЗ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛ ржпрж╛рзЯред ржкрзНрж░ржержо рж╕рж╛ржмржЯрж╛рж╕рзНржХрзЗрж░ ржЬржирзНржп рж╕рзЛржЬрж╛ рж▓рзБржкред ржкрж░рзЗрж░ржЯрж╛рж░ ржЬржирзНржп ржпрзЗрж╣рзЗрждрзБ ржПржХржЯрж╛ ржорж╛рждрзНрж░ ржХрзБрзЯрзЗрж░рж┐, рждрж╛ржЗ ржПржХржЯрж╛ ржкрзНрж░рж┐ржлрж┐ржХрзНрж╕ ржЕрзНржпрж╛рж░рзЗрж░ ржорждрзЛ ржХрж┐ржЫрзБ ржПржХржЯрж╛ рж░рзЗржЦрзЗ, $\mathcal O(1)$ ржП ржЖрж╛ржкржбрзЗржЯ ржХрж░рзЗ ржПржХржжржо рж╢рзЗрж╖рзЗ ржХрзБрзЯрзЗрж░рж┐рж░ ржЙрждрзНрждрж░ ржжрзЗрзЯрж╛ ржпрж╛рзЯред рждрж╛рж░ ржкрж░рзЗрж░ рж╕рж╛ржмржЯрж╛рж╕рзНржХржЯрж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржЕржирзЗржХ ржХрж┐ржЫрзБ ржХрж░рж╛ ржпрж╛рзЯред ржПржХржЯрж╛ рж╕рзЗржЧржорзЗржирзНржЯ ржЯрзНрж░рж┐ рж░рж╛ржЦрж╛ ржпрж╛рзЯ, <code class="highlighter-rouge">sqrt Decomposition</code> ржХрж░рж╛ ржпрж╛рзЯ, $log(n)$ ржП ржХрж░рж╛рж░ ржорждрзЛ ржХрж┐ржЫрзБ <code class="highlighter-rouge">range minimum query</code> ржзрж░ржирзЗрж░ ржЬрж┐ржирж┐рж╕ржкрждрзНрж░ ржжрж┐рзЯрзЗ ржПржЯрж┐ рж╕рж▓рзНржн ржХрж░рж╛ ржпрж╛рзЯ, ржПржмржВ ржмрж▓рж╛ ржпрж╛рзЯ ржПржЯрж┐ ржЕржирзЗржХржЯрж╛ well known, non-trivial problemред ржЖрж░ рж╢рзЗрж╖рзЗрж░ рж╕рж╛ржмржЯрж╛рж╕рзНржХрзЗ $l,r \leq 10^9$, ржЕрж░рзНржерж╛рзО, рж╕рзЗржЧржорзЗржирзНржЯ ржЯрзНрж░рж┐рждрзЗ рждрзБржорж┐ рж╕рзНржмрж╛ржнрж╛ржмрж┐ржХ ржнрж╛ржмрзЗ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржирж╛ред рждржмрзЗ рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ ржЕрзНржпрж╛рж░рзЗ ржПрж░ ржмржжрж▓рзЗ map ржмрзНржпрж╛ржмрж╣рж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░рзЛред рждрж╛рж╣рж▓рзЗ $\mathcal O(\log^2 n)$ ржкрж╛рж░ ржХрзБрзЯрзЗрж░рж┐рждрзЗ рж╕рж▓рзНржн ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗред <code class="highlighter-rouge">unordered_map</code> ржжрж┐рзЯрзЗ ржЖрж╕рж▓рзЗ ржПржнрж╛рж░рзЗржЬрзЗ $\mathcal O(\log n)$ ржкрж╛рж░ ржХрзБрзЯрзЗрж░рж┐рждрзЗ рж╕рж▓рзНржн ржХрж░рж╛ ржпрж╛рзЯред рждржмрзЗ ржПржЯрж╛ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛рж░ ржПржХржЯрж┐ рж╕рзБржирзНржжрж░ ржкржжрзНржзрждрж┐ ржЖржЫрзЗ, рж╕рзЗржЯрж╛ рж╣рж▓рзЛ <code class="highlighter-rouge">Implicit Segment Tree</code>. ржПржЯрж┐ ржЦрзБржм рж╕рзБржирзНржжрж░ ржПржХржЯрж╛ ржЬрж┐ржирж┐рж╕, ржПржЦрж╛ржирзЗ ржЖржорж░рж╛ ржирзЛржб рждржЦржиржЗ ржмрж╛ржирж╛ржмрзЛ, ржпржЦржи ржЖржорж╛ржжрзЗрж░ ржирзЛржб ржмрж╛ржирж╛ржирзЛрж░ ржжрж░ржХрж╛рж░ ржкрзЬржмрзЗ, ржбрж╛ржЗржирж╛ржорж┐ржХрзНржпрж╛рж▓рж┐ ржорзЗржорж░рж┐ ржЕрзНржпрж╛рж▓рзЛржХрзЗржЯ ржХрж░ржмрзЛ ржЖрж░ржХрж┐ред ржПржЯрж┐ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рждрзЗ ржЧрзЗрж▓рзЗ ржЕржирзЗржХ ржХрж┐ржЫрзБржЗ ржХрж░рждрзЗ рж╣ржмрзЗред рждржмрзЗ ржЖржорж╛рж░ ржоржирзЗ ржЖржЫрзЗ, рждрж╛рж╕ржорж┐ржо ржнрж╛ржЗрзЯрж╛рж░ ржХрж╛ржЫ ржерзЗржХрзЗ <code class="highlighter-rouge">Implicit Segtree</code> ржПрж░ ржПржХржЯрж╛ ржХрзЛржб ржирж┐рзЯрзЗ ржЖржорж┐ ржмрж╕рзЗ ржмрж╕рзЗ ржжрзЗржЦрзЗ ржжрзЗржЦрзЗ ржмрзБржЭрзЗ ржЧрж┐рзЯрзЗржЫрж┐рж▓рж╛ржо ржХрж┐ рж╣ржЪрзНржЫрзЗ ржмрзНржпрж╛ржкрж╛рж░ржЯрж╛ред ржЖрж╕рж▓рзЗ ржЦрзБржмржЗ рж╕рзЛржЬрж╛рж╕рж╛ржкрзНржЯрж╛ ржХрзЛржбред ржЖржорж┐ ржирж┐ржЪрзЗ ржжрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрж┐, ржЖрж╢рж╛ ржХрж░рж┐ рж╕ржмрж╛ржЗ ржмрзБржЭрждрзЗ ржкрж╛рж░ржмрзЗред</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;bits/stdc++.h&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">maxn</span> <span class="o">=</span> <span class="mi">1000000006</span><span class="p">;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">maxval</span> <span class="o">=</span> <span class="n">maxn</span><span class="p">;</span>
 
<span class="k">struct</span> <span class="n">node</span><span class="p">{</span>
 
	<span class="kt">int</span> <span class="n">val</span><span class="p">;</span>
	<span class="kt">bool</span> <span class="n">done</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
	<span class="n">node</span> <span class="o">*</span><span class="n">left</span><span class="p">;</span>
	<span class="n">node</span> <span class="o">*</span><span class="n">right</span><span class="p">;</span>
	<span class="n">node</span><span class="p">(</span><span class="n">node</span> <span class="o">*</span><span class="n">l</span> <span class="o">=</span> <span class="nb">NULL</span> <span class="p">,</span> <span class="n">node</span> <span class="o">*</span><span class="n">r</span> <span class="o">=</span> <span class="nb">NULL</span><span class="p">,</span> <span class="kt">int</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="kt">bool</span> <span class="n">d</span> <span class="o">=</span> <span class="nb">false</span><span class="p">)</span><span class="o">:</span>
		<span class="n">left</span><span class="p">(</span><span class="n">l</span><span class="p">),</span><span class="n">right</span><span class="p">(</span><span class="n">r</span><span class="p">),</span><span class="n">val</span><span class="p">(</span><span class="n">s</span><span class="p">),</span><span class="n">done</span><span class="p">(</span><span class="n">d</span><span class="p">){}</span>
	
	<span class="n">node</span> <span class="o">*</span><span class="n">update</span><span class="p">(</span><span class="kt">int</span> <span class="n">L</span><span class="p">,</span><span class="kt">int</span> <span class="n">R</span> <span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">done</span> <span class="n">or</span> <span class="n">L</span> <span class="o">&gt;</span> <span class="n">r</span> <span class="n">or</span> <span class="n">R</span> <span class="o">&lt;</span> <span class="n">l</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">&lt;=</span> <span class="n">L</span> <span class="n">and</span> <span class="n">R</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="p">){</span>
			<span class="n">val</span> <span class="o">=</span> <span class="n">R</span><span class="o">-</span><span class="n">L</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
			<span class="n">done</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="k">return</span> <span class="k">this</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">L</span><span class="o">+</span><span class="n">R</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">left</span><span class="p">)</span><span class="n">left</span> <span class="o">=</span> <span class="k">new</span> <span class="n">node</span><span class="p">();</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">right</span><span class="p">)</span><span class="n">right</span> <span class="o">=</span> <span class="k">new</span> <span class="n">node</span><span class="p">();</span>
		<span class="n">left</span> <span class="o">-&gt;</span> <span class="n">update</span><span class="p">(</span><span class="n">L</span><span class="p">,</span><span class="n">mid</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
		<span class="n">right</span> <span class="o">-&gt;</span> <span class="n">update</span><span class="p">(</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">R</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
 
		<span class="n">val</span> <span class="o">=</span> <span class="n">left</span><span class="o">-&gt;</span><span class="n">val</span><span class="o">+</span><span class="n">right</span><span class="o">-&gt;</span><span class="n">val</span><span class="p">;</span>
		<span class="n">val</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">val</span><span class="p">,</span><span class="n">R</span><span class="o">-</span><span class="n">L</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
		<span class="k">return</span> <span class="k">this</span><span class="p">;</span> 
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">query</span><span class="p">(</span><span class="kt">int</span> <span class="n">L</span><span class="p">,</span><span class="kt">int</span> <span class="n">R</span><span class="p">,</span><span class="kt">int</span> <span class="n">l</span><span class="p">,</span><span class="kt">int</span> <span class="n">r</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">L</span> <span class="o">&gt;</span> <span class="n">r</span> <span class="n">or</span> <span class="n">R</span> <span class="o">&lt;</span> <span class="n">l</span><span class="p">)</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">l</span> <span class="o">&lt;=</span> <span class="n">L</span> <span class="n">and</span> <span class="n">R</span> <span class="o">&lt;=</span> <span class="n">r</span><span class="p">)</span><span class="k">return</span> <span class="n">val</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">L</span><span class="o">+</span><span class="n">R</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">left</span><span class="p">)</span> <span class="n">x</span> <span class="o">=</span> <span class="n">left</span><span class="o">-&gt;</span><span class="n">query</span><span class="p">(</span><span class="n">L</span><span class="p">,</span><span class="n">mid</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
		<span class="k">if</span><span class="p">(</span><span class="n">right</span><span class="p">)</span><span class="n">y</span> <span class="o">=</span> <span class="n">right</span><span class="o">-&gt;</span><span class="n">query</span><span class="p">(</span><span class="n">mid</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">R</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
		<span class="k">return</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span><span class="o">*</span><span class="n">root</span><span class="p">;</span>
 
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">q</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">;</span>
	<span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">q</span><span class="p">);</span>
	<span class="n">root</span> <span class="o">=</span> <span class="k">new</span> <span class="n">node</span><span class="p">();</span>
	<span class="k">while</span><span class="p">(</span><span class="n">q</span><span class="o">--</span><span class="p">){</span>
		<span class="kt">char</span> <span class="n">ch</span><span class="p">;</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">" %c"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">ch</span><span class="p">);</span>
		<span class="k">if</span><span class="p">(</span><span class="n">ch</span> <span class="o">==</span> <span class="sc">'+'</span><span class="p">){</span>
			<span class="n">scanf</span><span class="p">(</span><span class="s">"%d%d"</span><span class="p">,</span><span class="o">&amp;</span><span class="n">l</span><span class="p">,</span><span class="o">&amp;</span><span class="n">r</span><span class="p">);</span>
			<span class="n">root</span> <span class="o">=</span> <span class="n">root</span> <span class="o">-&gt;</span> <span class="n">update</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">maxn</span><span class="p">,</span><span class="n">l</span><span class="p">,</span><span class="n">r</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">else</span> <span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span><span class="n">root</span><span class="o">-&gt;</span><span class="n">query</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">maxn</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">maxn</span><span class="p">));</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="problem-6-hrsiam-attends-parties">Problem 6: HrSiam Attends Parties</h2>
<p><a href="/assets/pdf/bdoi-2-prob-f.pdf"> Problem Statement </a></p>

<p>ржПржЯрж┐ ржоржирзЗ рж╣рзЯ рж╕ржмржерзЗржХрзЗ рж╕рж╣ржЬ рж╕ржорж╕рзНржпрж╛ред a,b ржЗржиржкрзБржЯ, $ceiling \bigg(\displaystyle{\frac{a}{b}} \bigg)$ ржЖржЙржЯржкрзБржЯред</p>

<h2 id="provlem-7-k-consecutive">Provlem 7: K-consecutive</h2>
<p><a href="/assets/pdf/bdoi-2-prob-g.pdf"> Problem Statement </a></p>

<p>ржПржЗ ржкрзНрж░ржмрзНрж▓рзЗржоржЯрж╛рж░ ржорзВрж▓ рж╕рж▓рж┐ржЙрж╢ржи ржбрж┐ржкрж┐ред ржкрзНрж░ржержо рж╕рж╛ржмржЯрж╛рж╕рзНржХрзЗ k = 1, ржпрж╛рж░ ржорж╛ржирзЗ рж╕рж▓рж┐ржЙрж╢ржи ржЯрж╛ рж╣ржмрзЗ $m \times (m-1)^{n-1} \mod m$ред ржкрж░рзЗрж░ рж╕рж╛ржмржЯрж╛рж╕рзНржХрзЗ ржЙрж░рж╛ржзрзБрж░рж╛ ржмрзНрж░рзБржЯржлрзЛрж░рзНрж╕ ржжрж┐рзЯрзЗржЗ ржХрж░рзЗ ржлрзЗрж▓рж╛ ржпрж╛ржмрзЗ, constraints ржЦрзБржм ржЫрзЛржЯред ржПрж░ржкрж░ ржУржЗ ржЙрж░рж╛ржзрзБрж░рж╛ ржмрзНрж░рзБржЯржлрзЛрж░рзНрж╕рзЗ $dp[ n ] [ k ] [m ]$ ржЯрж╛ржЗржкрзЗрж░ ржХрж┐ржЫрзБ ржПржХржЯрж╛ рж░рзЗржЦрзЗ ржжрж┐рж▓рзЗ ржорзЛржЯрж╛ржорзБржЯрж┐ ржкрж░рзЗрж░ рж╕рж╛ржмржЯрж╛рж╕рзНржХ рж╣рзЯрзЗ ржпрж╛ржмрзЗред ржПрж░ржкрж░ рж╢рзЗрж╖рзЗрж░ рж╕рж╛ржмржЯрж╛рж╕рзНржХрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЛ $5000^3$ ржкрж░рж┐ржорж╛ржи ржорзЗржорж░рж┐ ржирзЗрзЯрж╛ ржкрж╕рж┐ржмрж▓ ржирж╛ред рждрж╛ржЗ ржЖржорж╛ржжрзЗрж░ ржПржХржЯрж╛ ржбрж╛ржЗржорзЗржирж╢ржи ржХржорж╛рждрзЗ рж╣ржмрзЗред ржЖржорж░рж╛ ржЪрж┐ржирзНрждрж╛ ржХрж░рж┐, ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ ржХржд ржзрж░ржирзЗрж░ ржЦрж╛ржмрж╛рж░ ржЖржЫрзЗ, ржЕржержмрж╛ ржХрзЛржи ржЦрж╛ржмрж╛рж░ ржирж┐рзЯрзЗ ржмрж░рзНрждржорж╛ржирзЗ ржХрж╛ржЬ ржХрж░ржЫрж┐, рж╕рзЗржЯрж╛ рждрждржЯрж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржи ржирж╛ред ржХрждржнрж╛ржмрзЗ рж╕рж╛ржЬрж╛ржирзЛ ржпрж╛рзЯ рж╕рзЗржЯрж╛ржЗ ржорзВрж▓ ржмрж┐рж╖рзЯред рждрж╛ржЗ m ржХрзЗ рж░рзЗржЦрзЗ ржЖржорж╛ржжрзЗрж░ ржХрзЛржи ржХрж╛ржЬ ржирзЗржЗред ржЖржорж░рж╛ $dp(at,cur)$ ржирж┐рзЯрзЗ ржХрж╛ржЬ ржХрж░ржмрзЛред рж╣рзЯ ржПрж░ ржкрж░рзЗрж░ ржЯрж╛рзЯ ржмрж░рзНрждржорж╛ржи ржЫрж╛рзЬрж╛ ржЖрж░рзЗржХржЯрж╛ ржирж┐ржм, рждрж╛рж╣рж▓рзЗ cur 1 рж╣рзЯрзЗ ржпрж╛ржмрзЗред ржХрж╛рж░ржи ржЖржорж░рж╛ ржПржХржЯрж╛ржирж╛ ржПржХрж╛ржзрж┐ржХ ржЦрж╛ржмрж╛рж░ ржирзЗржЗржирж┐, $dp(at+1,1)$ред ржЖрж░ ржпржжрж┐ ржПржХржЗ ржЦрж╛ржмрж╛рж░ ржирзЗржЗ рждрж╛рж╣рж▓рзЗ $dp(at+1,cur+1)$. ржПржЯрж╛ ржХрж░рж▓рзЗржЗ $\mathcal O(n^2)$ ржП рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛ ржпрж╛ржмрзЗред рждржмрзЗ ржЖржорж╛рж░ ржХрзЗржи ржпрзЗржи ржоржирзЗ рж╣ржЪрзНржЫрзЗ ржПржЯрж╛рж░ ржЖрж░рзЛ ржнрж╛рж▓рзЛ рж╕рж▓рж┐ржЙрж╢ржи ржЖржЫрзЗ, рж╣рзЯрждрзЛ рж▓рж┐ржирж┐рзЯрж╛рж░рзЗрж░ рж╕рж╛ржерзЗ m ржмрж╛ k ржПрж░ рж▓ржЧрж╛рж░рж┐ржжржорж┐ржХ ржлрзНржпрж╛ржХрзНржЯрж░, рждржмрзЗ ржЖржорж┐ ржПрж░ ржерзЗржХрзЗ ржнрж╛рж▓рзЛ рж╕рж▓рж┐ржЙрж╢ржи ржмрзЗрзЬ ржХрж░рждрзЗ ржкрж╛рж░рж┐ржирж┐ред $\mathcal O(n^2)$ ржПрж░ ржХрзЛржб ржжрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрж┐ред</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define ll long long 
</span><span class="n">ll</span> <span class="nf">solve</span><span class="p">(</span><span class="kt">int</span> <span class="n">pos</span><span class="p">,</span> <span class="kt">int</span> <span class="n">cur</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">pos</span><span class="o">==</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">cur</span><span class="o">==</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="mi">0LL</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">dp</span><span class="p">[</span><span class="n">pos</span><span class="p">][</span><span class="n">cur</span><span class="p">]</span><span class="o">!=-</span><span class="mi">1</span><span class="p">)</span> <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="n">pos</span><span class="p">][</span><span class="n">cur</span><span class="p">];</span>
    <span class="n">ll</span> <span class="n">ret</span> <span class="o">=</span> <span class="mi">0LL</span><span class="p">;</span>
    <span class="n">ll</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">cur</span><span class="o">&lt;</span><span class="n">k</span><span class="p">)</span> <span class="n">x</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span><span class="o">%</span><span class="n">mod</span><span class="o">+</span><span class="n">solve</span><span class="p">(</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="n">cur</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
    <span class="k">else</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">y</span> <span class="o">=</span> <span class="p">(</span><span class="n">y</span><span class="o">%</span><span class="n">mod</span><span class="o">+</span><span class="n">solve</span><span class="p">(</span><span class="n">pos</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="n">m</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">dp</span><span class="p">[</span><span class="n">pos</span><span class="p">][</span><span class="n">cur</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">)</span><span class="o">%</span><span class="n">mod</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>рж╕ржмрж╛ржЗржХрзЗ ржзржирзНржпржмрж╛ржжред</p>
:ET